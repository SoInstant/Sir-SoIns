from discord import message
import feedparser
import discord.ext.commands as commands
import discord

from parameters import ICON_URL

RSS_LINKS = {
    "st": {
        "world": "https://www.straitstimes.com/news/world/rss.xml",
        "business": "https://www.straitstimes.com/news/business/rss.xml",
        "sport": "https://www.straitstimes.com/news/sport/rss.xml",
        "life": "https://www.straitstimes.com/news/life/rss.xml",
        "opinion": "https://www.straitstimes.com/news/opinion/rss.xml",
        "sg": "https://www.straitstimes.com/news/singapore/rss.xml",
        "asia": "https://www.straitstimes.com/news/asia/rss.xml",
        "tech": "https://www.straitstimes.com/news/tech/rss.xml",
        "multimedia": "https://www.straitstimes.com/news/multimedia/rss.xml",
    },
    "cna": {
        "latest": "https://www.channelnewsasia.com/rssfeeds/8395986",
        "asia": "https://www.channelnewsasia.com/rssfeeds/8395744",
        "business": "https://www.channelnewsasia.com/rssfeeds/8395954",
        "sg": "https://www.channelnewsasia.com/rssfeeds/8396082",
        "sport": "https://www.channelnewsasia.com/rssfeeds/8395838",
        "world": "https://www.channelnewsasia.com/rssfeeds/8395884",
    },
}


class RSS(commands.Cog):
    """Commands to access news articles"""

    def __init__(self, bot):
        self.bot = bot

    @commands.command(
        name="rss",
        help="Command for rss.",
    )
    async def st(self, ctx, source: str, mode: str) -> None:
        entries: dict
        try:
            entries = feedparser.parse(RSS_LINKS[source][mode])["entries"]
        except KeyError:
            await ctx.channel.send(content="No such news source/type of news!")

        embed = discord.Embed(
            title="**World news**", url="https://www.straitstimes.com/world"
        )
        embed.set_author(
            name="Straits Times",
            url="https://www.straitstimes.com",
            icon_url="https://soinstant.ml/static/st_icon.png",
        )
        for entry in entries[:10]:
            value = (
                entry["summary"].replace("<br />", "\n") if "summary" in entry else None
            )
            embed.add_field(
                name=f"[{entry['title']}]({entry['link']})",
                value=value,
                inline=False,
            )
        embed.set_footer(text="Generated by Sir SoInstant", icon_url=ICON_URL)
        await ctx.channel.send(embed=embed)
